var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"set_apikey","category":"page"},{"location":"reference/#Aeconomica.set_apikey","page":"Reference","title":"Aeconomica.set_apikey","text":"set_apikey(key)\n\nSet the API key to be used for requests. API keys are shown on the account page (https://aeconomica.io/account).\n\nAlternatively, you can set the environmental variable AECONOMICA_APIKEY, which will be loaded at package load time.\n\nYou can overwrite this key at anytime by calling set_apikey again.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Series","page":"Reference","title":"Series","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"fetch_series\nfetch_series_as_at","category":"page"},{"location":"reference/#Aeconomica.fetch_series","page":"Reference","title":"Aeconomica.fetch_series","text":"fetch_series(code::AbstractString, vintage::AbstractString)\n\nFetch series with series_id code.\n\nVintage can be any of current (alias latest, default), previous or a date in YYYY-MM-DD form.\n\nReturns a dataframe with four colums: dates,  series_id, values, vintage.\n\n\n\n\n\nfetch_series(codes::AbstractArray{<:AbstractString, 1}, vintage::AbstractString)\n\nFetch a list of series with codes given by the array codes. For all series, fetch the vintage given by vintage.\n\nVintage can be any of current (alias latest, default), previous or a date in YYYY-MM-DD form.\n\nReturns a dataframe with four colums: dates,  series_id, values, vintage.\n\n\n\n\n\nfetch_series(series::AbstractArray{T, 1}) where T <: Pair{<:AbstractString, <:AbstractString}\n\nFetch a list of series with specified series codes and vintages.\n\nEach element of the list is a pair series_code => vintage. Vintage must be explicitly specified.\n\nVintage can be any of current (alias latest), previous or a date in YYYY-MM-DD form.\n\nReturns a dataframe with four colums: dates,  series_id, values, vintage.\n\nExample\n\nfetch_series([\"CPI\" => \"latest\", \"CPI_SYD\" => \"previous\"])`\n\n\n\n\n\n","category":"function"},{"location":"reference/#Aeconomica.fetch_series_as_at","page":"Reference","title":"Aeconomica.fetch_series_as_at","text":"fetch_series_as_at(code::AbstractString, as_at_date::AbstractString)\n\nFetch series with seriesid code, with whatever the latest vintage of the series was as at the date specified by `asat_date`.\n\nasatdate must be a date in YYYY-MM-DD form.\n\nReturns a dataframe with four colums: dates, as_at_date, series_id, values.\n\n\n\n\n\nfetch_series_as_at(codes::AbstractArray{<:AbstractString, 1}, as_at_date::AbstractString)\n\nFetch a list of series with codes given by the array codes, with whatever the latest vintage of the series was as at the date specified by as_at_date.\n\nasatdate must be a date in YYYY-MM-DD form.\n\nReturns a dataframe with four colums: dates, as_at_date, series_id, values.\n\n\n\n\n\nfetch_series_as_at(series::AbstractArray{T, 1}) where T <: Pair{<:AbstractString, <:AbstractString}\n\nFetch a list of series with specified series codes, with whatever the latest vintage of the series was as at the date specified by as_at_date.\n\nEach element of the list is a pair series_code => as_at_date.\n\nasatdate must be a date in YYYY-MM-DD form.\n\nReturns a dataframe with four colums: dates, as_at_date, series_id, values.\n\nExample\n\nfetch_series_as_at([\"CPI\" => \"2021-01-01\", \"CPI_SYD\" => \"2019-01-01\"])`\n\n\n\n\n\n","category":"function"},{"location":"reference/#Datasets","page":"Reference","title":"Datasets","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"fetch_dataset","category":"page"},{"location":"reference/#Aeconomica.fetch_dataset","page":"Reference","title":"Aeconomica.fetch_dataset","text":"fetch_dataset(dataset_id::AbstractString; restrictions::Dict{<:AbstractString, <:AbstractArray{<:AbstractString, 1}}, vintage::AbstractString = \"latest\", dimensions::Symbol = :code)\n\nFetch dataset with datasetid `datasetid`.\n\nRestrictions is an (optional) dictionary with keys (corresponding to names of dimensions) mapping to an Array of codes. Only series that have those codes for that dimension are returned in the dataset.\n\nVintage can be any of current (alias latest, default), previous or a date in YYYY-MM-DD form.\n\ndimensions can be one of :code or :name. This dictates whether the values for each dimension in the dataset are returned as the codes for each dimension (the default), or (for :name) the long names that correspond to those codes.\n\nReturns a dataframe, including columns: values, vintage. The dataframe will also have columns for each of the dimensions of the dataset.\n\n\n\n\n\n","category":"function"},{"location":"#Aeconomica.jl","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"","category":"section"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"(Image: Lifecycle) (Image: CI) (Image: codecov.io) (Image: Documentation)","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"Aeconomica.jl provides quick and easy access to the Aeconomica data API.","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"To use this package, you will need to sign up for a free Aeconomica account to get an API key. You can find the API key in the account page of your Aeconomica account.","category":"page"},{"location":"#Installation","page":"Aeconomica.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"Aeconomica.jl is not registered in the Julia General registry. As such to install to the lastest release, run:","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"import Pkg\nPkg.add(\"https://github.com/aeconomica/Aeconomica.jl.git#release\")","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"(Alternatively you can install the development version by removing the #release)","category":"page"},{"location":"#Usage","page":"Aeconomica.jl","title":"Usage","text":"","category":"section"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"To grab data for a series - e.g. the level of GDP - simply run (where \"YOURAPIKEY\" is the API key from your Aeconomica account):","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"using Aeconomica\nset_apikey(\"YOUR_API_KEY\")\nfetch_series(\"GDP\")","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"To grab an entire dataset of series, and their dimensions - such as ABS weekly jobs by State - just run:","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"using Aeconomica\nset_apikey(\"YOUR_API_KEY\")\nfetch_dataset(\"WJP_STATE\")","category":"page"},{"location":"","page":"Aeconomica.jl","title":"Aeconomica.jl","text":"In each case the series or dataset keys can be found by searching the Aeconomica website. When viewing a series or dataset, the key is shown in the top right. You can also click on the \"JULIA\" button in the bottom left to get the code you need for the dataset you are viewing.","category":"page"}]
}
